{"version":3,"sources":["components/Footer/Footer.js","constants/userConstants.js","actions/userAction.js","components/Header/Header.js","screens/LandingPage/LandingPage.js","components/MainScreen.js","components/Loading.js","components/ErrorMessage.js","constants/noteConstants.js","actions/notesAction.js","screens/MyNotes/MyNotes.js","screens/LoginScreen/LoginScreen.js","screens/RegisterScreen/RegisterScreen.js","screens/CreateNote/CreateNote.js","screens/SingleNote/SingleNote.js","screens/ProfileScreen/ProfileScreen.js","App.js","reportWebVitals.js","store.js","reducers/userReducers.js","reducers/notesReducers.js","index.js"],"names":["Footer","style","width","position","bottom","display","justifyContent","Container","Row","Col","className","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","login","email","password","dispatch","a","type","config","headers","axios","post","data","payload","localStorage","setItem","JSON","stringify","response","message","register","name","pic","Header","setSearch","history","useHistory","useDispatch","userInfo","useSelector","state","userLogin","Navbar","bg","expand","variant","Brand","to","Toggle","Collapse","id","Nav","Form","inline","FormControl","placeholder","classname","onChange","e","target","value","Link","href","NavDropdown","title","Item","Divider","onClick","removeItem","push","LandingPage","useEffect","getItem","Button","size","MainScreen","children","Loading","alignItems","height","Spinner","animation","ErrorMessage","Alert","fontSize","NOTES_LIST_REQUEST","NOTES_LIST_SUCCESS","NOTES_LIST_FAIL","NOTES_CREATE_REQUEST","NOTES_CREATE_SUCCESS","NOTES_CREATE_FAIL","NOTES_UPDATE_REQUEST","NOTES_UPDATE_SUCCESS","NOTES_UPDATE_FAIL","NOTES_DELETE_REQUEST","NOTES_DELETE_SUCCESS","NOTES_DELETE_FAIL","deleteNoteAction","getState","Authorization","token","delete","MyNotes","search","noteList","loading","notes","error","successCreate","noteCreate","success","successUpdate","noteUpdate","noteDelete","loadingDelete","errorDelete","successDelete","console","log","get","marginLeft","marginBottom","reverse","filter","filteredNote","toLowerCase","includes","map","note","Accordion","Card","margin","color","textDecoration","flex","cursor","alignSelf","as","Text","eventKey","_id","window","confirm","Body","Badge","category","content","createdAt","substring","LoginScreen","useState","setEmail","setPassword","submitHandler","preventDefault","onSubmit","Group","controlId","Label","Control","RegisterScreen","setName","setPic","confirmpassword","setConfirmPassword","setMessage","picMessage","setPicMessage","userRegister","File","pics","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","postDetails","files","label","custom","CreateNote","setTitle","setContent","setCategory","resetHandler","createNoteAction","rows","Date","toLocaleDateString","SingleNote","match","date","setDate","fetching","params","updatedAt","put","updateNoteAction","ProfileScreen","confirmPassword","userUpdate","mr","user","varient","styles","src","alt","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","initialState","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1225dd85.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer\r\n         style={{\r\n          width: \"100%\",\r\n          position:\"relative\",\r\n          bottom: 0,\r\n          display:\"flex\",\r\n          justifyContent:\"center\",\r\n\r\n\r\n\r\n\r\n         }}\r\n>\r\n    <Container>\r\n        <Row>\r\n            <Col className=\"text-center py-3\"> Copyright &copy;Rainbownotes</Col>\r\n        </Row>\r\n    </Container>\r\n        </footer>\r\n    )\r\n};\r\n\r\nexport default Footer\r\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n\r\n\r\nexport const USER_REGISTER_REQUEST =\"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS =\"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAIL =\"USER_REGISTER_FAIL\";\r\n\r\nexport const USER_UPDATE_REQUEST =\"USER_UPDATE_REQUEST\";\r\nexport const USER_UPDATE_SUCCESS =\"USER_UPDATE_SUCCESS\";\r\nexport const USER_UPDATE_FAIL =\"USER_UPDATE_FAIL\";","import { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS } from \"../constants/userConstants\";\r\nimport axios from 'axios'\r\n\r\nexport const login = (email, password)=> async (dispatch) => {\r\n    try{\r\n        dispatch({ type: USER_LOGIN_REQUEST});\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n            },\r\n        };\r\n     \r\n        \r\n      const { data } = await axios.post(\r\n          \"/api/users/login\",\r\n          { email, password },\r\n          config\r\n      );\r\n\r\n      dispatch ({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    }catch (error) {\r\n        dispatch({\r\n         type:  USER_LOGIN_FAIL,\r\n         payload:\r\n         error.response && error.response.data.message\r\n         ? error.response.data.message\r\n         : error.message,\r\n\r\n\r\n        });\r\n\r\n    }\r\n     \r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    localStorage.removeItem(\"userInfo\");\r\n    dispatch ({ type: USER_LOGOUT});\r\n};\r\n\r\nexport const register = (name, email, password, pic)=> async (dispatch) => {\r\n    try{\r\n        dispatch({ type: USER_REGISTER_REQUEST});\r\n\r\n        const config = {\r\n            \r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n            },\r\n        };\r\n     \r\n        \r\n      const { data } = await axios.post(\r\n          \"/api/users\",\r\n          { name, pic, email, password },\r\n          config\r\n      );\r\n\r\n      dispatch ({ type: USER_REGISTER_SUCCESS, payload: data });\r\n      dispatch ({ type: USER_LOGIN_SUCCESS, payload: data });\r\n    \r\n\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    }catch (error) {\r\n        dispatch({\r\n         type:  USER_REGISTER_FAIL,\r\n         payload:\r\n         error.response && error.response.data.message\r\n         ? error.response.data.message\r\n         : error.message,\r\n\r\n\r\n        });\r\n\r\n    }\r\n     \r\n};\r\nexport const updateProfile = (user)=>async(dispatch,getState)=>{\r\n    try{ \r\n        dispatch({ type: USER_UPDATE_REQUEST });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n          };\r\n          const { data } = await axios.post(\"/api/users/profile\", user, config);\r\n\r\n          dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\r\n      \r\n          dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n      \r\n          localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n        } catch (error) {\r\n          dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload:\r\n              error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n          });\r\n\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n   \r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {  Container, Form, FormControl, Nav, Navbar, NavDropdown } from 'react-bootstrap'\r\nimport { Link , useHistory} from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { logout } from '../../actions/userAction';\r\nconst Header = ({ setSearch }) => {\r\n\r\nconst history=useHistory();\r\n\r\nconst dispatch = useDispatch();\r\n\r\nconst userLogin = useSelector((state) => state.userLogin);\r\nconst { userInfo } = userLogin;\r\n\r\nconst logoutHandler =()=>{\r\n\r\n  dispatch(logout())\r\n  history.push(\"/\");\r\n}\r\n\r\n\r\n\r\n    return (\r\n        <Navbar bg=\"primary\" expand=\"lg\" variant=\"dark\">\r\n  <Container>\r\n    <Navbar.Brand>\r\n    <Link to=\"/\">\r\n    Rainbow Notes\r\n    </Link>\r\n    </Navbar.Brand>\r\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className='m-auto'>\r\n    <Form inline>\r\n          <FormControl type=\"text\" \r\n          placeholder=\"Search\" \r\n          classname=\"mr-sm-2\"\r\n          onChange={(e) => setSearch(e.target.value)}\r\n          />\r\n          \r\n      </Form>\r\n      </Nav>\r\n      {userInfo ? (<Nav>\r\n        <Nav.Link href=\"/mynotes\">\r\n          <Link to=\"/mynotes\">\r\n          My Notes\r\n          </Link>\r\n          \r\n          </Nav.Link>\r\n        \r\n        <NavDropdown title={userInfo?.name} id=\"basic-nav-dropdown\">\r\n          <NavDropdown.Item href=\"/profile\">My Profile</NavDropdown.Item>\r\n         \r\n          \r\n          <NavDropdown.Divider />\r\n          <NavDropdown.Item onClick={logoutHandler}\r\n          >Logout</NavDropdown.Item>\r\n        </NavDropdown>\r\n      </Nav>\r\n      ):(\r\n      <Nav> \r\n        {\" \"}\r\n      <Nav.Link>\r\n      <Link to=\"/login\">\r\n         Login\r\n          </Link>\r\n          \r\n          </Nav.Link>\r\n          </Nav>\r\n      )}\r\n      \r\n    </Navbar.Collapse>\r\n  </Container>\r\n</Navbar>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import { useEffect } from \"react\";\r\nimport { Button, Container, Row } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./LandingPage.css\";\r\nconst LandingPage = ({ history }) => {\r\n\r\nuseEffect(() => {\r\n    const userInfo = localStorage.getItem(\"userInfo\");\r\n    \r\n    if(userInfo) {\r\n\r\n        history.push(\"/mynotes\");\r\n\r\n    }\r\n},[history]);\r\n\r\n\r\n\r\n\r\n\r\nreturn <div className='main'>\r\n            <Container> \r\n                <Row>\r\n                    <div classname='intro-text'>\r\n                        <div>\r\n                            <h1 className='title'>Welcome to Rainbow Notes</h1>\r\n                            \r\n                            <p className='subtitle'>\r\n                          One Safe Place for all your Notes.\r\n                            </p>\r\n                            <div className='buttonContainer'>\r\n                            <Link to='/login'>\r\n                                <Button size='lg' className=\"landingbutton\">\r\n                                    Login\r\n                                </Button>\r\n                            </Link>                       \r\n                               <Link to='/register'>\r\n                                <Button size='lg' className=\"landingbutton\" variant=\"outline-primary\">\r\n                                    Signup\r\n                                </Button>\r\n                            </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Row>\r\n            </Container>\r\n        </div>;\r\n    \r\n};\r\n\r\nexport default LandingPage;\r\n","import { Container, Row } from \"react-bootstrap\";\r\nimport \"./MainScreen.css\";\r\n\r\n\r\nconst MainScreen = ({title, children}) => {\r\n    return (\r\n        <div className='mainback'>\r\n            <Container>\r\n             <Row>\r\n                 <div className='page'>\r\n                     {title && (<> \r\n                 <h1 className='heading'>{title}</h1>\r\n                <hr />\r\n                 </>\r\n                     )}\r\n                 {children}\r\n                 </div>\r\n                 \r\n           </Row>   \r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainScreen;\r\n","import { Spinner } from \"react-bootstrap\"\r\n\r\nconst Loading = ({ size = 100 }) => {\r\n    return (\r\n        <div\r\n        style={{\r\n         display: \"flex\",\r\n         justifyContent:\"center\",\r\n         alignItems:\"center\",\r\n         width: \"100%\",\r\n         height: \"100%\"\r\n\r\n        }}\r\n         >\r\n        <Spinner\r\n        style={{\r\n         width: size,\r\n         height: size,\r\n        }}\r\n        animation=\"border\"\r\n        />\r\n\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading;\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nconst ErrorMessage = ({ variant = \"info\", children }) => {\r\n    return (\r\n        <Alert variant= {variant} style={{ fontSize: 20 }}>\r\n         <strong>{children}</strong>\r\n\r\n\r\n        </Alert>\r\n            \r\n        \r\n    );\r\n};\r\n\r\nexport default ErrorMessage;\r\n\r\n\r\n\r\n","export const NOTES_LIST_REQUEST =\"NOTES_LIST_REQUEST\";\r\nexport const NOTES_LIST_SUCCESS =\"NOTES_LIST_SUCCESS\";\r\nexport const NOTES_LIST_FAIL =\"NOTES_LIST_FAIL\";\r\n\r\nexport const NOTES_CREATE_REQUEST =\"NOTES_CREATE_REQUEST\";\r\nexport const NOTES_CREATE_SUCCESS =\"NOTES_CREATE_SUCCESS\";\r\nexport const NOTES_CREATE_FAIL =\"NOTES_CREATE_FAIL\";\r\n\r\n\r\nexport const NOTES_UPDATE_REQUEST =\"NOTES_UPDATE_REQUEST\";\r\nexport const NOTES_UPDATE_SUCCESS =\"NOTES_UPDATE_SUCCESS\";\r\nexport const NOTES_UPDATE_FAIL =\"NOTES_UPDATE_FAIL\";\r\n\r\nexport const NOTES_DELETE_REQUEST =\"NOTES_DELETE_REQUEST\";\r\nexport const NOTES_DELETE_SUCCESS =\"NOTES_DELETE_SUCCESS\";\r\nexport const NOTES_DELETE_FAIL =\"NOTES_DELETE_FAIL\";\r\n","import axios from \"axios\";\r\nimport { NOTES_CREATE_FAIL, NOTES_CREATE_REQUEST, NOTES_CREATE_SUCCESS, NOTES_DELETE_REQUEST, NOTES_DELETE_SUCCESS, NOTES_LIST_FAIL, NOTES_LIST_REQUEST, NOTES_LIST_SUCCESS, NOTES_UPDATE_FAIL, NOTES_UPDATE_REQUEST, NOTES_UPDATE_SUCCESS } from \"../constants/noteConstants\";\r\n\r\nexport const listNotes = () => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: NOTES_LIST_REQUEST,\r\n      });\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n  \r\n      const config = { \r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.get(`/api/notes`, config);\r\n  \r\n      dispatch({\r\n        type: NOTES_LIST_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: NOTES_LIST_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\n  export const createNoteAction=\r\n   (title, content, category) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: NOTES_CREATE_REQUEST,\r\n      });\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n  \r\n      const config = { \r\n        headers: {\r\n          \"content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.post\r\n      (`/api/notes/create`,\r\n      { title, content, category },\r\n      config);\r\n  \r\n      dispatch({\r\n        type: NOTES_CREATE_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: NOTES_CREATE_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\n  export const updateNoteAction=\r\n   (id, title, content, category) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: NOTES_UPDATE_REQUEST,\r\n      });\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n  \r\n      const config = { \r\n        headers: {\r\n          \"content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.put\r\n      (`/api/notes/${id}`,\r\n      { title, content, category },\r\n      config);\r\n  \r\n      dispatch({\r\n        type: NOTES_UPDATE_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: NOTES_UPDATE_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\n  export const deleteNoteAction=\r\n   (id) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: NOTES_DELETE_REQUEST,\r\n      });\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n  \r\n      const config = { \r\n        headers: {\r\n        \r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.delete\r\n      (`/api/notes/${id}`,\r\n      \r\n      config);\r\n  \r\n      dispatch({\r\n        type: NOTES_DELETE_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: NOTES_UPDATE_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };","import { useEffect } from \"react\";\r\nimport { Accordion, Badge, Button, Card } from \"react-bootstrap\";\r\nimport { Link, useHistory} from \"react-router-dom\";\r\nimport MainScreen from \"../../components/MainScreen\";\r\n\r\nimport { useDispatch , useSelector } from \"react-redux\"\r\n\r\nimport Loading from\"../../components/Loading\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport { deleteNoteAction, listNotes } from \"../../actions/notesAction\";\r\nconst MyNotes = ({ search }) => {\r\nconst dispatch = useDispatch();\r\nconst noteList = useSelector(state => state.noteList);\r\nconst { loading, notes, error } = noteList;\r\n\r\n\r\nconst userLogin = useSelector((state) => state.userLogin);\r\nconst { userInfo } = userLogin;\r\n\r\nconst noteCreate = useSelector((state) => state.noteCreate);\r\nconst { success: successCreate } = noteCreate;\r\n\r\nconst noteUpdate = useSelector((state) => state.noteUpdate);\r\nconst { success:successUpdate } = noteUpdate;\r\n\r\nconst noteDelete = useSelector(state => state.noteDelete)\r\nconst { loading: loadingDelete,\r\n     error: errorDelete, \r\n     success: successDelete } = noteDelete;\r\n\r\nconst deleteHandler = (id)=> {\r\n    if (window.confirm(\"Are you Sure?\")){\r\n    dispatch(deleteNoteAction(id));\r\n    }\r\n};\r\n\r\nconsole.log(notes);\r\n\r\nconst history = useHistory();\r\n\r\nuseEffect(()=>{\r\n dispatch(listNotes());\r\n if(!userInfo) {\r\n     history.push('/');\r\n }\r\n},[dispatch, successCreate, history, userInfo, successUpdate, successDelete,]);\r\n\r\n\r\n\r\n\r\n    return(\r\n    <MainScreen title={`Welcome Back ${userInfo.name}.. `}>\r\n        <Link to=\"createnote\">\r\n        <Button style={{ marginLeft: 10, marginBottom: 6 }} size=\"lg\">\r\n            Create New Note\r\n        </Button>\r\n        </Link>\r\n        {errorDelete && (\r\n            <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\r\n        )}\r\n        \r\n         {loadingDelete && <Loading/> }\r\n        {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n        {loading && <Loading/>}\r\n       {notes\r\n       ?.reverse()\r\n       .filter((filteredNote)=> \r\n\r\n        filteredNote.title.toLowerCase().includes(search.toLowerCase())\r\n\r\n       ).map((note) =>(\r\n               <Accordion key={note._id}>\r\n                   <Card style={{margin: 10}}>\r\n            <Card.Header style={{display:\"flex\"}}>\r\n                <span\r\n                style={{\r\n                 color:\"black\",\r\n                 textDecoration:\"none\",\r\n                 flex: 1,\r\n                 cursor: \"pointer\",\r\n                 alignSelf: \"center\",\r\n                 fontSize: 18,\r\n               }}\r\n                >\r\n                   <Accordion.Toggle as={Card.Text} variant='link' eventKey=\"0\" >{note.title}\r\n\r\n                   </Accordion.Toggle>\r\n\r\n                    \r\n            </span>\r\n            \r\n            <div>\r\n                <Button href={`/note/${note._id}`}>Edit</Button>\r\n                <Button \r\n                variant=\"danger\" \r\n                className=\"mx-2\"\r\n                onClick={()=> deleteHandler(note._id)}\r\n                >\r\n                    Delete\r\n                    </Button>\r\n            </div>\r\n            </Card.Header>\r\n           <Accordion.Collapse eventKey=\"0\">\r\n           <Card.Body>\r\n                <h4>\r\n                    <Badge variant=\"success\">\r\n                        Category -{note.category}\r\n                    </Badge>\r\n                </h4>\r\n            <blockquote className=\"blockquote mb-0\">\r\n      <p>\r\n        \r\n        {note.content}\r\n      </p>\r\n      <footer className=\"blockquote-footer\">\r\n       <cite title=\"Source Title\">\r\n      {note.createdAt.substring(0, 10)}\r\n       </cite>\r\n      </footer>\r\n    </blockquote>\r\n            </Card.Body>\r\n\r\n\r\n           </Accordion.Collapse>\r\n            \r\n\r\n\r\n\r\n          </Card>\r\n\r\n               </Accordion>\r\n            \r\n               \r\n           ))\r\n       }\r\n       \r\n        \r\n            \r\n    </MainScreen>\r\n    );\r\n\r\n    };\r\n\r\nexport default MyNotes;\r\n","\r\n\r\nimport {  useEffect, useState } from \"react\";\r\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { login } from \"../../actions/userAction\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport Loading from \"../../components/Loading\";\r\nimport MainScreen from \"../../components/MainScreen\";\r\nimport \"./LoginScreen.css\";\r\n\r\nconst LoginScreen = ({history}) => {\r\n   \r\n     const [email, setEmail] = useState(\"\")\r\n     const [password, setPassword] = useState(\"\")\r\n     \r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n     const { loading, error, userInfo } = userLogin;    \r\n    \r\n     useEffect(() => {\r\n      if (userInfo){\r\n       history.push(\"/mynotes\")\r\n      }\r\n     }, [history, userInfo]);\r\n     \r\n     \r\n     \r\n     const submitHandler = async(e)=> {\r\n         e.preventDefault();\r\n\r\n         dispatch(login(email, password));\r\n     };\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <MainScreen title=\"LOGIN\">\r\n        <div className=\"loginContainer\">\r\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n            {loading && <Loading />}\r\n        <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n        <Form.Label>Email address</Form.Label>\r\n        <Form.Control\r\n        type=\"email\"\r\n        value={email}\r\n        placeholder=\"Enter email\"\r\n        onChange={(e) => setEmail(e.target.value)}\r\n       />\r\n     </Form.Group>\r\n\r\n     <Form.Group controlId=\"formBasicPassword\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n        type=\"password\"\r\n        value={password}\r\n        placeholder=\"password\"\r\n        onChange={(e) => setPassword(e.target.value)}\r\n       />\r\n     </Form.Group>\r\n\r\n     <Button variant=\"primary\" type=\"submit\">\r\n         Submit\r\n    </Button>\r\n     </Form>\r\n     \r\n     <Row className=\"py-3\">\r\n     <Col>\r\n     New Customer? <Link to=\"/register\">Register Here</Link>\r\n     \r\n     </Col>\r\n\r\n     </Row>\r\n</div>\r\n\r\n\r\n</MainScreen>\r\n);\r\n    \r\n};\r\n\r\nexport default LoginScreen;\r\n","\r\nimport { useEffect, useState } from \"react\";\r\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link , useHistory} from \"react-router-dom\";\r\nimport { register } from \"../../actions/userAction\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport Loading from \"../../components/Loading\";\r\nimport MainScreen from \"../../components/MainScreen\";\r\n\r\n\r\n\r\nconst RegisterScreen = () => {\r\n\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [pic, setPic] = useState(\r\n      \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\r\n    );\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmpassword, setConfirmPassword] = useState(\"\");\r\n    const [message, setMessage] = useState(null);\r\n    const [picMessage, setPicMessage] = useState(null);\r\n    \r\n    const dispatch = useDispatch();\r\n    const userRegister = useSelector((state) => state.userRegister);\r\n    const { loading, error, userInfo } = userRegister;\r\n\r\n    \r\n  const history = useHistory();\r\n    useEffect(() => {\r\n       if (userInfo){\r\n         history.push(\"/mynotes\");\r\n       }\r\n     \r\n    }, [history, userInfo]);\r\n\r\n\r\n\r\n\r\n    const submitHandler = async (e)=> {\r\n    e.preventDefault();\r\n\r\n    if(password!==confirmpassword){\r\n      setMessage('Passwords do not match')\r\n    }\r\n    else{\r\n      dispatch(register(name,email,password,pic))\r\n    }\r\n};\r\n\r\nconst postDetails=(pics)=> {\r\n\r\n   if (!pics) {\r\n       return setPicMessage(\"Please Select an Image\");\r\n   }\r\n       \r\nsetPicMessage(null)\r\n\r\nif(pics.type=== 'image/jpeg'|| pics.type==='image/png'){\r\n    const data = new FormData();\r\n    data.append('file', pics);\r\n    data.append('upload_preset','RainbowNotes');\r\n    data.append('cloud_name','rainbownotes');\r\n    fetch(\"https://api.cloudinary.com/v1_1/rainbownotes/image/upload\",{\r\n        method:'post',\r\n        body: data,\r\n\r\n  })\r\n  .then((res) => res.json())\r\n  .then((data) => {\r\n     \r\n    console.log(data);\r\n   \r\n    setPic(data.url.toString());\r\n\r\n})\r\n.catch((err) => {\r\n console.log(err);\r\n})\r\n\r\n}else{\r\n    return setPicMessage(\"Please Select an Image\");\r\n}\r\n\r\n};\r\n\r\n\r\n\r\n\r\n    return <MainScreen title=\"REGISTER\">\r\n       <div className=\"loginContainer\">\r\n        {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n        {message && <ErrorMessage variant=\"danger\">{message}</ErrorMessage>}\r\n        {loading && <Loading />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              value={name}\r\n              placeholder=\"Enter name\"\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              value={email}\r\n              placeholder=\"Enter email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={password}\r\n              placeholder=\"Password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"confirmPassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={confirmpassword}\r\n              placeholder=\"Confirm Password\"\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          {picMessage && (\r\n            <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\r\n          )}\r\n          <Form.Group controlId=\"pic\">\r\n            <Form.Label>Profile Picture</Form.Label>\r\n            <Form.File\r\n              onChange={(e) => postDetails(e.target.files[0])}\r\n              id=\"custom-file\"\r\n              type=\"image/png\"\r\n              label=\"Upload Profile Picture\"\r\n              custom\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Register\r\n          </Button>\r\n        </Form>\r\n        <Row className=\"py-3\">\r\n          <Col>\r\n            Have an Account ? <Link to=\"/login\">Login</Link>\r\n          </Col>\r\n        </Row>\r\n      </div> \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        </MainScreen>;\r\n    \r\n};\r\n\r\nexport default RegisterScreen;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport MainScreen from \"../../components/MainScreen\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport Loading from \"../../components/Loading\";\r\nimport { Button, Card, Form } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport { createNoteAction } from \"../../actions/notesAction\";\r\n\r\n\r\n\r\n\r\n  function CreateNote ({ history }) {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [content, setContent] = useState(\"\");\r\n    const [category, setCategory] =useState(\"\");\r\n\r\nconst dispatch = useDispatch();\r\n\r\nconst noteCreate = useSelector((state) => state.noteCreate);\r\nconst { loading, error, note } = noteCreate;\r\nconsole.log(note);\r\n\r\n  const resetHandler = () => {\r\n    setTitle(\"\");\r\n    setCategory(\"\");\r\n    setContent(\"\");\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (!title || !content || !category) return;\r\n    dispatch(createNoteAction(title, content, category));\r\n  \r\n\r\n    resetHandler();\r\n    history.push(\"/mynotes\");\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <MainScreen title=\"Create a Note\">\r\n      <Card>\r\n        <Card.Header>Create a new Note</Card.Header>\r\n        <Card.Body>\r\n          <Form onSubmit={submitHandler}>\r\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n            <Form.Group controlId=\"title\">\r\n              <Form.Label>Title</Form.Label>\r\n              <Form.Control\r\n                type=\"title\"\r\n                value={title}\r\n                placeholder=\"Enter the title\"\r\n                onChange={(e) => setTitle(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"content\">\r\n              <Form.Label>Content</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                value={content}\r\n                placeholder=\"Enter the content\"\r\n                rows={4}\r\n                onChange={(e) => setContent(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            {content && (\r\n              <Card>\r\n                <Card.Header>Note Preview</Card.Header>\r\n                <Card.Body>\r\n                  <ReactMarkdown>{content}</ReactMarkdown>\r\n                </Card.Body>\r\n              </Card>\r\n            )}\r\n\r\n            <Form.Group controlId=\"content\">\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type=\"content\"\r\n                value={category}\r\n                placeholder=\"Enter the Category\"\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            {loading && <Loading size={50} />}\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Create Note\r\n            </Button>\r\n            <Button className=\"mx-2\" onClick={resetHandler} variant=\"danger\">\r\n              Reset Feilds\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n\r\n        <Card.Footer className=\"text-muted\">\r\n          Creating on - {new Date().toLocaleDateString()}\r\n        </Card.Footer>\r\n      </Card>\r\n    </MainScreen>\r\n  );\r\n}\r\n\r\nexport default CreateNote;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MainScreen from \"../../components/MainScreen\";\r\nimport axios from \"axios\";\r\nimport { Button, Card, Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport Loading from \"../../components/Loading\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport { deleteNoteAction, updateNoteAction } from \"../../actions/notesAction\";\r\n\r\nfunction SingleNote({ match, history }) {\r\n  const [title, setTitle] = useState();\r\n  const [content, setContent] = useState();\r\n  const [category, setCategory] = useState();\r\n  const [date, setDate] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const noteUpdate = useSelector((state) => state.noteUpdate);\r\n  const { loading, error } = noteUpdate;\r\n\r\n  const noteDelete = useSelector((state) => state.noteDelete);\r\n  const { loading: loadingDelete, error: errorDelete } = noteDelete;\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure?\")) {\r\n      dispatch(deleteNoteAction(id));\r\n    }\r\n    history.push(\"/mynotes\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetching = async () => {\r\n      const { data } = await axios.get(`/api/notes/${match.params.id}`);\r\n\r\n      setTitle(data.title);\r\n      setContent(data.content);\r\n      setCategory(data.category);\r\n      setDate(data.updatedAt);\r\n    };\r\n\r\n    fetching();\r\n  }, [match.params.id, date]);\r\n\r\n  const resetHandler = () => {\r\n    setTitle(\"\");\r\n    setCategory(\"\");\r\n    setContent(\"\");\r\n  };\r\n\r\n  const updateHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateNoteAction(match.params.id, title, content, category));\r\n    if (!title || !content || !category) return;\r\n\r\n    resetHandler();\r\n    history.push(\"/mynotes\");\r\n  };\r\n\r\n  return (\r\n    <MainScreen title=\"Edit Note\">\r\n      <Card>\r\n        <Card.Header>Edit your Note</Card.Header>\r\n        <Card.Body>\r\n          <Form onSubmit={updateHandler}>\r\n            {loadingDelete && <Loading />} \r\n            \r\n            {errorDelete && (\r\n              <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\r\n            )}\r\n\r\n{error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n            <Form.Group controlId=\"title\">\r\n              <Form.Label>Title</Form.Label>\r\n              <Form.Control\r\n                type=\"title\"\r\n                placeholder=\"Enter the title\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"content\">\r\n              <Form.Label>Content</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                placeholder=\"Enter the content\"\r\n                rows={4}\r\n                value={content}\r\n                onChange={(e) => setContent(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            {content && (\r\n              <Card>\r\n                <Card.Header>Note Preview</Card.Header>\r\n                <Card.Body>\r\n                  <ReactMarkdown>{content}</ReactMarkdown>\r\n                </Card.Body>\r\n              </Card>\r\n            )}\r\n\r\n            <Form.Group controlId=\"content\">\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type=\"content\"\r\n                placeholder=\"Enter the Category\"\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            {loading && <Loading size={50} />}\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Update Note\r\n            </Button>\r\n            <Button\r\n              className=\"mx-2\"\r\n              variant=\"danger\"\r\n              onClick={() => deleteHandler(match.params.id)}\r\n            >\r\n              Delete Note\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n\r\n        <Card.Footer className=\"text-muted\">\r\n          Updated on - {date.substring(0, 10)}\r\n        </Card.Footer>\r\n      </Card>\r\n    </MainScreen>\r\n  );\r\n}\r\n\r\nexport default SingleNote;","import React, { useEffect, useState } from 'react'\r\nimport { Col, Row, Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport MainScreen from '../../components/MainScreen';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\nimport Loading from \"../../components/Loading\";\r\nimport { useHistory } from 'react-router';\r\nimport { updateProfile } from '../../actions/userAction';\r\nimport \"./ProfileScreen.css\";\r\nconst ProfileScreen = () => {\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [pic, setPic] = useState();\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [picMessage, setPicMessage] = useState();\r\n   \r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n  \r\n    const userUpdate = useSelector((state) => state.userUpdate);\r\n    const { loading, error, success } = userUpdate;\r\n\r\n\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        if(!userInfo) {\r\n          history.push('/');\r\n        }else{\r\n            setName(userInfo.name)\r\n            setEmail(userInfo.email)\r\n            setPic(userInfo.pic)\r\n        }\r\n    }, [history, userInfo])\r\n    \r\n    \r\n    \r\n    const postDetails=(pics)=> {\r\n\r\n        if (!pics) {\r\n            return setPicMessage(\"Please Select an Image\");\r\n        }\r\n            \r\n     setPicMessage(null)\r\n     \r\n     if(pics.type=== 'image/jpeg'|| pics.type==='image/png'){\r\n         const data = new FormData();\r\n         data.append('file', pics);\r\n         data.append('upload_preset','RainbowNotes');\r\n         data.append('cloud_name','rainbownotes');\r\n         fetch(\"https://api.cloudinary.com/v1_1/rainbownotes/image/upload\",{\r\n             method:'post',\r\n             body: data,\r\n     \r\n       })\r\n       .then((res) => res.json())\r\n       .then((data) => {\r\n          \r\n         console.log(data);\r\n        \r\n         setPic(data.url.toString());\r\n     \r\n     })\r\n     .catch((err) => {\r\n      console.log(err);\r\n     })\r\n     \r\n     }else{\r\n         return setPicMessage(\"Please Select an Image\");\r\n     }\r\n     \r\n     };\r\n\r\n    const submitHandler = (e)=> {\r\n     e.preventDefault();\r\n     if(password===confirmPassword)\r\n     dispatch(updateProfile({ name, email, password, pic }));\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <MainScreen title=\"EDIT PROFILE\">\r\n            \r\n            <div>\r\n                <Row className=\"profileContainer\">\r\n                    <Col mr={6}> \r\n                    <Form onSubmit={submitHandler}>\r\n              {loading && <Loading />}\r\n              {success && (\r\n                <ErrorMessage variant=\"success\">\r\n                  Updated Successfully\r\n                </ErrorMessage>\r\n              )}\r\n              {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n              <Form.Group controlId=\"name\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Name\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"email\">\r\n                <Form.Label>Email Address</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Enter Email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"password\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Enter Password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"confirmPassword\">\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Confirm Password\"\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>{\" \"}\r\n              {picMessage && (\r\n                <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\r\n              )}\r\n              <Form.Group controlId=\"pic\">\r\n                <Form.Label>Change Profile Picture</Form.Label>\r\n                <Form.File\r\n                  onChange={(e) => postDetails(e.target.files[0])}\r\n                  id=\"custom-file\"\r\n                  type=\"image/png\"\r\n                  label=\"Upload Profile Picture\"\r\n                  custom\r\n                />\r\n              </Form.Group>\r\n              <Button type=\"submit\" varient=\"primary\">\r\n                Update\r\n              </Button>\r\n            </Form>\r\n            </Col>\r\n                    <Col\r\n                    styles={{\r\n                     display: \"flex\",\r\n                     alignItems: \"center\",\r\n                     justifyContent:\"center\",\r\n\r\n                    }}\r\n                    \r\n                    >\r\n                        <img src={pic} alt={name} className=\"profilePic\"/>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            </MainScreen>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n)\r\n    };\r\n\r\nexport default ProfileScreen;\r\n","\nimport './App.css';\nimport Footer from './components/Footer/Footer';\nimport Header from './components/Header/Header';\nimport LandingPage from './screens/LandingPage/LandingPage';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport MyNotes from './screens/MyNotes/MyNotes';\nimport LoginScreen from \"./screens/LoginScreen/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen/RegisterScreen\";\nimport CreateNote from './screens/CreateNote/CreateNote';\nimport SingleNote from './screens/SingleNote/SingleNote';\nimport { useState } from 'react';\nimport ProfileScreen from './screens/ProfileScreen/ProfileScreen';\n\nconst App =() => {\n const [search, setSearch] = useState(\"\");\n\n console.log(search);\n\n \nreturn(\n  <BrowserRouter>\n   <Header setSearch={setSearch}/>\n   <main>\n\n   <Route path=\"/\" component={LandingPage} exact/>\n   <Route path=\"/login\" component={LoginScreen} exact/>\n   <Route path=\"/profile\" component={ProfileScreen} exact/>\n   <Route path=\"/register\" component={RegisterScreen} exact/>\n   <Route path=\"/createnote\" component={CreateNote} />\n   <Route path=\"/note/:id\" component={SingleNote} />\n   <Route path=\"/mynotes\" component={()=> <MyNotes search={search}/>} />\n   </main>\n  \n   <Footer/>\n\n   </BrowserRouter>\n)};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { userLoginReducer, userRegisterReducer, userUpdateReducer } from \"./reducers/userReducers\";\r\nimport { noteCreateReducer, noteDeleteReducer, noteListReducer, noteUpdateReducer } from \"./reducers/notesReducers\";\r\n\r\nconst reducer = combineReducers({\r\nuserLogin: userLoginReducer,\r\nuserRegister: userRegisterReducer,\r\nnoteList: noteListReducer,\r\nnoteCreate: noteCreateReducer,\r\nnoteUpdate: noteUpdateReducer,\r\nnoteDelete: noteDeleteReducer,\r\nuserUpdate: userUpdateReducer,\r\n})\r\n\r\nconst userInfoFromStorage= localStorage.getItem('userInfo')\r\n?JSON.parse(localStorage.getItem(\"userInfo\"))\r\n: null;\r\nconst initialState = {\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store=createStore(\r\n   reducer,\r\n   initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n\r\n);\r\nexport default store;\r\n\r\n","import { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS } from \"../constants/userConstants\";\r\n\r\nexport const userLoginReducer=(state = {}, action)=> {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true };\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: true, userInfo: action.payload };\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_LOGOUT:\r\n            return{ };\r\n           \r\n    \r\n        default:\r\n            return state;\r\n          \r\n    }\r\n}\r\n\r\n\r\nexport const userRegisterReducer=(state = {}, action)=> {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true };\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        \r\n    \r\n        default:\r\n            return state;\r\n          \r\n    }\r\n}\r\n\r\nexport const userUpdateReducer=(state = {}, action)=> {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true };\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, userInfo: action.payload, success: true };\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload, success: false };\r\n        \r\n    \r\n        default:\r\n            return state;\r\n          \r\n    }\r\n}","import { NOTES_CREATE_FAIL, NOTES_CREATE_REQUEST, NOTES_CREATE_SUCCESS, NOTES_DELETE_FAIL, NOTES_DELETE_REQUEST, NOTES_DELETE_SUCCESS, NOTES_LIST_FAIL, NOTES_LIST_REQUEST, NOTES_LIST_SUCCESS, NOTES_UPDATE_FAIL, NOTES_UPDATE_REQUEST, NOTES_UPDATE_SUCCESS} from \"../constants/noteConstants\";\r\n\r\nexport const noteListReducer = (state = { notes: [] }, action)=>{\r\nswitch (action.type) {\r\n    case NOTES_LIST_REQUEST:\r\n        return { loading: true };\r\n    case NOTES_LIST_SUCCESS:\r\n        return { loading: false, notes: action.payload };\r\n    case NOTES_LIST_FAIL:\r\n        return { loading:false, error: action.payload };\r\n\r\n   default:\r\n       return state;   \r\n}\r\n\r\n};\r\n\r\nexport const noteCreateReducer = (state = { notes: [] }, action)=>{\r\n    switch (action.type) {\r\n        case NOTES_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case NOTES_CREATE_SUCCESS:\r\n            return { loading: false, notes: action.payload };\r\n        case NOTES_CREATE_FAIL:\r\n            return { loading:false, error: action.payload };\r\n    \r\n       default:\r\n           return state;   \r\n    }\r\n    \r\n    };\r\n\r\n    export const noteUpdateReducer = (state = { notes: [] }, action)=>{\r\n        switch (action.type) {\r\n            case NOTES_UPDATE_REQUEST:\r\n                return { loading: true };\r\n            case NOTES_UPDATE_SUCCESS:\r\n                return { loading: false, success: true };\r\n            case NOTES_UPDATE_FAIL:\r\n                return { loading:false, error: action.payload, success: false };\r\n        \r\n           default:\r\n               return state;   \r\n        }\r\n        \r\n        };\r\n\r\n\r\n        export const noteDeleteReducer = (state = { notes: [] }, action)=>{\r\n            switch (action.type) {\r\n                case NOTES_DELETE_REQUEST:\r\n                    return { loading: true };\r\n                case NOTES_DELETE_SUCCESS:\r\n                    return { loading: false, success: true };\r\n                case NOTES_DELETE_FAIL:\r\n                    return { loading:false, error: action.payload, success: false };\r\n            \r\n               default:\r\n                   return state;   \r\n            }\r\n            \r\n            };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"./bootstrap.min.css\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport store from \"./store\";\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}